// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SSCodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// =1+1 is entered in cell A1
        /// </summary>
        public void BasicAddTest()
        {
            #region Variable Declarations
            WinClient uISpreadsheetPanel1Client = this.UIYexcelWindow.UIItemWindow.UISpreadsheetPanel1Client;
            WinEdit uITextBox_contentEdit = this.UIYexcelWindow.UITextBox_contentWindow.UITextBox_contentEdit;
            #endregion

            // Launch '%USERPROFILE%\Visual Studio 2013\Projects\PS6\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe'
            ApplicationUnderTest uIYexcelWindow = ApplicationUnderTest.Launch(this.BasicAddTestParams.UIYexcelWindowExePath, this.BasicAddTestParams.UIYexcelWindowAlternateExePath);

            // Click 'spreadsheetPanel1' client
            Mouse.Click(uISpreadsheetPanel1Client, new Point(52, 39));

            // Type '1+1' in 'textBox_content' text box
            uITextBox_contentEdit.Text = this.BasicAddTestParams.UITextBox_contentEditText;
        }
        
        /// <summary>
        /// asserts contents are 1+1
        /// </summary>
        public void AssertConententsEqual()
        {
            #region Variable Declarations
            WinEdit uITextBox_contentEdit = this.UIYexcelWindow.UITextBox_contentWindow.UITextBox_contentEdit;
            #endregion

            // Verify that the 'Text' property of 'textBox_content' text box equals '1+1'
            Assert.AreEqual(this.AssertConententsEqualExpectedValues.UITextBox_contentEditText, uITextBox_contentEdit.Text, "expected 1+1");
        }
        
        #region Properties
        public virtual BasicAddTestParams BasicAddTestParams
        {
            get
            {
                if ((this.mBasicAddTestParams == null))
                {
                    this.mBasicAddTestParams = new BasicAddTestParams();
                }
                return this.mBasicAddTestParams;
            }
        }
        
        public virtual AssertConententsEqualExpectedValues AssertConententsEqualExpectedValues
        {
            get
            {
                if ((this.mAssertConententsEqualExpectedValues == null))
                {
                    this.mAssertConententsEqualExpectedValues = new AssertConententsEqualExpectedValues();
                }
                return this.mAssertConententsEqualExpectedValues;
            }
        }
        
        public UIYexcelWindow UIYexcelWindow
        {
            get
            {
                if ((this.mUIYexcelWindow == null))
                {
                    this.mUIYexcelWindow = new UIYexcelWindow();
                }
                return this.mUIYexcelWindow;
            }
        }
        #endregion
        
        #region Fields
        private BasicAddTestParams mBasicAddTestParams;
        
        private AssertConententsEqualExpectedValues mAssertConententsEqualExpectedValues;
        
        private UIYexcelWindow mUIYexcelWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'BasicAddTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class BasicAddTestParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Visual Studio 2013\Projects\PS6\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe'
        /// </summary>
        public string UIYexcelWindowExePath = @"..\..\..SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Visual Studio 2013\Projects\PS6\SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe'
        /// </summary>
        public string UIYexcelWindowAlternateExePath = "%USERPROFILE%\\Visual Studio 2013\\Projects\\PS6\\SpreadsheetGUI\\bin\\Debug\\Spreadshee" +
            "tGUI.exe";
        //public string UIYexcelWindowAlternateExePath = @"..\..\..SpreadsheetGUI\bin\Debug\SpreadsheetGUI.exe";
        
        /// <summary>
        /// Type '1+1' in 'textBox_content' text box
        /// </summary>
        public string UITextBox_contentEditText = "1+1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertConententsEqual'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertConententsEqualExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'textBox_content' text box equals '1+1'
        /// </summary>
        public string UITextBox_contentEditText = "1+1";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIYexcelWindow : WinWindow
    {
        
        public UIYexcelWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Yexcel";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Yexcel");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UITextBox_contentWindow UITextBox_contentWindow
        {
            get
            {
                if ((this.mUITextBox_contentWindow == null))
                {
                    this.mUITextBox_contentWindow = new UITextBox_contentWindow(this);
                }
                return this.mUITextBox_contentWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UITextBox_contentWindow mUITextBox_contentWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Yexcel");
            #endregion
        }
        
        #region Properties
        public WinClient UISpreadsheetPanel1Client
        {
            get
            {
                if ((this.mUISpreadsheetPanel1Client == null))
                {
                    this.mUISpreadsheetPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUISpreadsheetPanel1Client.WindowTitles.Add("Yexcel");
                    #endregion
                }
                return this.mUISpreadsheetPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISpreadsheetPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITextBox_contentWindow : WinWindow
    {
        
        public UITextBox_contentWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox_content";
            this.WindowTitles.Add("Yexcel");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox_contentEdit
        {
            get
            {
                if ((this.mUITextBox_contentEdit == null))
                {
                    this.mUITextBox_contentEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextBox_contentEdit.WindowTitles.Add("Yexcel");
                    #endregion
                }
                return this.mUITextBox_contentEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox_contentEdit;
        #endregion
    }
}
